{"ast":null,"code":"import { io } from 'socket.io-client'; // Importa io correttamente\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = function (a0, a1) {\n  return {\n    \"user-message\": a0,\n    \"bot-message\": a1\n  };\n};\nfunction ChatComponent_div_3_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const msg_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, msg_r4.startsWith(\"Tu:\"), !msg_r4.startsWith(\"Tu:\")));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", msg_r4, \" \");\n  }\n}\nfunction ChatComponent_div_3_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵtext(1, \"Aldo Moro is typing...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ChatComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5);\n    i0.ɵɵelement(2, \"img\", 6);\n    i0.ɵɵelementStart(3, \"span\", 7);\n    i0.ɵɵtext(4, \"Aldo Moro\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ChatComponent_div_3_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.closeChat());\n    });\n    i0.ɵɵtext(6, \"X\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 9)(8, \"div\", 10);\n    i0.ɵɵtemplate(9, ChatComponent_div_3_div_9_Template, 2, 5, \"div\", 11);\n    i0.ɵɵtemplate(10, ChatComponent_div_3_div_10_Template, 2, 0, \"div\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 13)(12, \"textarea\", 14, 15);\n    i0.ɵɵlistener(\"input\", function ChatComponent_div_3_Template_textarea_input_12_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const _r3 = i0.ɵɵreference(13);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.adjustHeight(_r3));\n    })(\"keydown\", function ChatComponent_div_3_Template_textarea_keydown_12_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const _r3 = i0.ɵɵreference(13);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.onKeydown($event, _r3));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function ChatComponent_div_3_Template_button_click_14_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const _r3 = i0.ɵɵreference(13);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.sendMessage(_r3));\n    });\n    i0.ɵɵtext(15, \"Send\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.messages);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isTyping);\n  }\n}\nexport class ChatComponent {\n  constructor() {\n    this.message = '';\n    this.messages = [];\n    this.chatOpen = false;\n    this.isTyping = false; // Variabili per gestire lo stato di \"scrittura\" del server\n  }\n\n  ngOnInit() {\n    // Connessione al server Flask con Socket.IO (usa HTTPS)\n    this.socket = io('https://5000-thammahetti-chatbotsite-aasn929c9qw.ws-eu118.gitpod.io/'); // Cambia l'URL se necessario\n    // Ascolta i messaggi ricevuti dal server (chatbot)\n    this.socket.on('message', msg => {\n      this.messages.push(`Piombobot: ${msg}`);\n      this.isTyping = false; // Nascondi l'indicatore di scrittura\n    });\n  }\n\n  sendMessage(message) {\n    this.message = message.value;\n    if (this.message.trim()) {\n      // Aggiungi il messaggio dell'utente alla chat\n      this.messages.push(`Tu: ${this.message}`);\n      message.value = ''; // Pulisce la casella di testo\n      // Indica che il server sta scrivendo\n      this.isTyping = true;\n      // Invia il messaggio al server tramite Socket.IO\n      this.socket.emit('message', this.message);\n    }\n  }\n  // Metodo per aprire il popup della chat\n  openChat() {\n    this.chatOpen = true;\n  }\n  // Metodo per chiudere il popup della chat\n  closeChat() {\n    this.chatOpen = false;\n  }\n  // Metodo per gestire la pressione di un tasto (Enter)\n  onKeydown(event, message) {\n    if (event.key === 'Enter') {\n      this.sendMessage(message);\n    }\n  }\n  // Metodo per gestire l'altezza dinamica del campo di input\n  adjustHeight(input) {\n    input.style.height = 'auto'; // Reset height to auto first\n    input.style.height = `${input.scrollHeight}px`; // Set height based on content scrollHeight\n  }\n\n  static {\n    this.ɵfac = function ChatComponent_Factory(t) {\n      return new (t || ChatComponent)();\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChatComponent,\n      selectors: [[\"app-chat\"]],\n      decls: 4,\n      vars: 1,\n      consts: [[1, \"page-container\"], [1, \"open-chat-btn\", 3, \"click\"], [\"src\", \"../../assets/Aldo_moro.png\", \"alt\", \"Aldo Moro\", 1, \"chat-btn-avatar\"], [\"class\", \"chat-popup\", 4, \"ngIf\"], [1, \"chat-popup\"], [1, \"chat-header\"], [\"src\", \"../../assets/Aldo_moro.png\", \"alt\", \"Aldo Moro\", 1, \"chat-avatar\"], [1, \"chat-name\"], [1, \"close-chat-btn\", 3, \"click\"], [1, \"chat-body\"], [1, \"messages\"], [\"class\", \"message\", 3, \"ngClass\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"server-typing\", 4, \"ngIf\"], [1, \"input-row\"], [\"placeholder\", \"Type a message...\", 3, \"input\", \"keydown\"], [\"message\", \"\"], [1, \"send-button\", 3, \"click\"], [1, \"message\", 3, \"ngClass\"], [1, \"server-typing\"]],\n      template: function ChatComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1);\n          i0.ɵɵlistener(\"click\", function ChatComponent_Template_button_click_1_listener() {\n            return ctx.openChat();\n          });\n          i0.ɵɵelement(2, \"img\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(3, ChatComponent_div_3_Template, 16, 2, \"div\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngIf\", ctx.chatOpen);\n        }\n      },\n      dependencies: [i1.NgClass, i1.NgForOf, i1.NgIf],\n      styles: [\"\\n\\n.page-container[_ngcontent-%COMP%] {\\n  position: relative;\\n}\\n\\n\\n\\n.open-chat-btn[_ngcontent-%COMP%] {\\n  position: fixed;\\n  bottom: 20px;\\n  right: 20px;\\n  background-color: white;\\n  border: 3px solid #25d366;\\n  border-radius: 50%;\\n  width: 80px;\\n  height: 80px;\\n  padding: 5px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  cursor: pointer;\\n  transition: transform 0.2s ease;\\n  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.25);\\n}\\n\\n.open-chat-btn[_ngcontent-%COMP%]:hover {\\n  transform: scale(1.1);\\n}\\n\\n\\n\\n.chat-btn-avatar[_ngcontent-%COMP%] {\\n  width: 70px;\\n  height: 70px;\\n  border-radius: 50%;\\n  object-fit: cover;\\n}\\n\\n\\n\\n.chat-popup[_ngcontent-%COMP%] {\\n  position: fixed;\\n  bottom: 90px;\\n  right: 20px;\\n  width: 350px;\\n  max-height: 500px;\\n  background-color: #ffffff;\\n  border-radius: 15px;\\n  box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);\\n  display: flex;\\n  flex-direction: column;\\n  overflow: hidden;\\n  opacity: 0;\\n  animation: _ngcontent-%COMP%_fadeIn 0.3s forwards;\\n}\\n\\n\\n\\n@keyframes _ngcontent-%COMP%_fadeIn {\\n  from {\\n    opacity: 0;\\n  }\\n  to {\\n    opacity: 1;\\n  }\\n}\\n\\n\\n\\n.chat-header[_ngcontent-%COMP%] {\\n  background-color: #128c7e;\\n  color: white;\\n  padding: 15px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n\\n.chat-avatar[_ngcontent-%COMP%] {\\n  width: 40px;\\n  height: 40px;\\n  border-radius: 50%;\\n  object-fit: cover;\\n  margin-right: 10px;\\n}\\n\\n.chat-name[_ngcontent-%COMP%] {\\n  font-weight: bold;\\n  font-size: 16px;\\n}\\n\\n.close-chat-btn[_ngcontent-%COMP%] {\\n  background: none;\\n  border: none;\\n  color: white;\\n  font-size: 20px;\\n  cursor: pointer;\\n}\\n\\n.close-chat-btn[_ngcontent-%COMP%]:hover {\\n  color: #ddd;\\n}\\n\\n\\n\\n.chat-body[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  padding: 10px;\\n  overflow-y: auto;\\n  max-height: 400px;\\n}\\n\\n.messages[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  gap: 10px;\\n  overflow-y: auto;\\n  max-height: 300px;\\n}\\n\\n.message[_ngcontent-%COMP%] {\\n  padding: 10px;\\n  border-radius: 8px;\\n  max-width: 75%;\\n  word-wrap: break-word;\\n}\\n\\n.user-message[_ngcontent-%COMP%] {\\n  background-color: #25d366;\\n  color: white;\\n  align-self: flex-end;\\n}\\n\\n.bot-message[_ngcontent-%COMP%] {\\n  background-color: #f0f0f0;\\n  color: #333;\\n  align-self: flex-start;\\n}\\n\\n\\n\\n.server-typing[_ngcontent-%COMP%] {\\n  font-style: italic;\\n  color: #888;\\n}\\n\\n\\n\\n.input-row[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 10px;\\n  margin-top: 10px;\\n}\\n\\n\\n\\ntextarea[_ngcontent-%COMP%] {\\n  flex: 1;\\n  min-height: 40px;\\n  max-height: 100px;\\n  resize: none;\\n  padding: 10px;\\n  border: 1px solid #ddd;\\n  border-radius: 8px;\\n  font-size: 14px;\\n  outline: none;\\n  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);\\n}\\n\\n\\n\\n.send-button[_ngcontent-%COMP%] {\\n  background-color: #128c7e;\\n  color: white;\\n  border: none;\\n  border-radius: 8px;\\n  padding: 10px 16px;\\n  font-weight: bold;\\n  cursor: pointer;\\n  transition: background-color 0.3s ease;\\n}\\n\\n.send-button[_ngcontent-%COMP%]:hover {\\n  background-color: #25d366;\\n}\\n\\n\\n\\n@media screen and (max-width: 400px) {\\n  .chat-popup[_ngcontent-%COMP%] {\\n    width: 100%;\\n    max-height: 90%;\\n  }\\n\\n  .messages[_ngcontent-%COMP%] {\\n    max-height: 300px;\\n  }\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY2hhdC9jaGF0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsMkJBQTJCO0FBQzNCO0VBQ0Usa0JBQWtCO0FBQ3BCOztBQUVBLHdDQUF3QztBQUN4QztFQUNFLGVBQWU7RUFDZixZQUFZO0VBQ1osV0FBVztFQUNYLHVCQUF1QjtFQUN2Qix5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLFdBQVc7RUFDWCxZQUFZO0VBQ1osWUFBWTtFQUNaLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsdUJBQXVCO0VBQ3ZCLGVBQWU7RUFDZiwrQkFBK0I7RUFDL0IsMENBQTBDO0FBQzVDOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUVBLDRCQUE0QjtBQUM1QjtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGlCQUFpQjtBQUNuQjs7QUFFQSxlQUFlO0FBQ2Y7RUFDRSxlQUFlO0VBQ2YsWUFBWTtFQUNaLFdBQVc7RUFDWCxZQUFZO0VBQ1osaUJBQWlCO0VBQ2pCLHlCQUF5QjtFQUN6QixtQkFBbUI7RUFDbkIseUNBQXlDO0VBQ3pDLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsZ0JBQWdCO0VBQ2hCLFVBQVU7RUFDViwrQkFBK0I7QUFDakM7O0FBRUEsY0FBYztBQUNkO0VBQ0U7SUFDRSxVQUFVO0VBQ1o7RUFDQTtJQUNFLFVBQVU7RUFDWjtBQUNGOztBQUVBLGdCQUFnQjtBQUNoQjtFQUNFLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osYUFBYTtFQUNiLGFBQWE7RUFDYixtQkFBbUI7RUFDbkIsOEJBQThCO0FBQ2hDOztBQUVBO0VBQ0UsV0FBVztFQUNYLFlBQVk7RUFDWixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixZQUFZO0VBQ1osZUFBZTtFQUNmLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUEsY0FBYztBQUNkO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixhQUFhO0VBQ2IsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsU0FBUztFQUNULGdCQUFnQjtFQUNoQixpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSxhQUFhO0VBQ2Isa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCxxQkFBcUI7QUFDdkI7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsWUFBWTtFQUNaLG9CQUFvQjtBQUN0Qjs7QUFFQTtFQUNFLHlCQUF5QjtFQUN6QixXQUFXO0VBQ1gsc0JBQXNCO0FBQ3hCOztBQUVBLHFCQUFxQjtBQUNyQjtFQUNFLGtCQUFrQjtFQUNsQixXQUFXO0FBQ2I7O0FBRUEsdUNBQXVDO0FBQ3ZDO0VBQ0UsYUFBYTtFQUNiLFNBQVM7RUFDVCxnQkFBZ0I7QUFDbEI7O0FBRUEscUJBQXFCO0FBQ3JCO0VBQ0UsT0FBTztFQUNQLGdCQUFnQjtFQUNoQixpQkFBaUI7RUFDakIsWUFBWTtFQUNaLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixhQUFhO0VBQ2IsOENBQThDO0FBQ2hEOztBQUVBLGdCQUFnQjtBQUNoQjtFQUNFLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZixzQ0FBc0M7QUFDeEM7O0FBRUE7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUEsa0JBQWtCO0FBQ2xCO0VBQ0U7SUFDRSxXQUFXO0lBQ1gsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLGlCQUFpQjtFQUNuQjtBQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyogR2VuZXJhbCBwYWdlIGNvbnRhaW5lciAqL1xuLnBhZ2UtY29udGFpbmVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xufVxuXG4vKiBDaGF0Ym90IEJ1dHRvbiAtIExhcmdlciBhbmQgY2xlYW5lciAqL1xuLm9wZW4tY2hhdC1idG4ge1xuICBwb3NpdGlvbjogZml4ZWQ7XG4gIGJvdHRvbTogMjBweDtcbiAgcmlnaHQ6IDIwcHg7XG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICBib3JkZXI6IDNweCBzb2xpZCAjMjVkMzY2O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIHdpZHRoOiA4MHB4O1xuICBoZWlnaHQ6IDgwcHg7XG4gIHBhZGRpbmc6IDVweDtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnMgZWFzZTtcbiAgYm94LXNoYWRvdzogMCA2cHggMTJweCByZ2JhKDAsIDAsIDAsIDAuMjUpO1xufVxuXG4ub3Blbi1jaGF0LWJ0bjpob3ZlciB7XG4gIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbn1cblxuLyogTGFyZ2VyIGF2YXRhciBpbiBidXR0b24gKi9cbi5jaGF0LWJ0bi1hdmF0YXIge1xuICB3aWR0aDogNzBweDtcbiAgaGVpZ2h0OiA3MHB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xufVxuXG4vKiBDaGF0IFBvcHVwICovXG4uY2hhdC1wb3B1cCB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYm90dG9tOiA5MHB4O1xuICByaWdodDogMjBweDtcbiAgd2lkdGg6IDM1MHB4O1xuICBtYXgtaGVpZ2h0OiA1MDBweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgYm94LXNoYWRvdzogMCA1cHggMTVweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIG92ZXJmbG93OiBoaWRkZW47XG4gIG9wYWNpdHk6IDA7XG4gIGFuaW1hdGlvbjogZmFkZUluIDAuM3MgZm9yd2FyZHM7XG59XG5cbi8qIEFuaW1hdGlvbiAqL1xuQGtleWZyYW1lcyBmYWRlSW4ge1xuICBmcm9tIHtcbiAgICBvcGFjaXR5OiAwO1xuICB9XG4gIHRvIHtcbiAgICBvcGFjaXR5OiAxO1xuICB9XG59XG5cbi8qIENoYXQgSGVhZGVyICovXG4uY2hhdC1oZWFkZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTI4YzdlO1xuICBjb2xvcjogd2hpdGU7XG4gIHBhZGRpbmc6IDE1cHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2Vlbjtcbn1cblxuLmNoYXQtYXZhdGFyIHtcbiAgd2lkdGg6IDQwcHg7XG4gIGhlaWdodDogNDBweDtcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufVxuXG4uY2hhdC1uYW1lIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGZvbnQtc2l6ZTogMTZweDtcbn1cblxuLmNsb3NlLWNoYXQtYnRuIHtcbiAgYmFja2dyb3VuZDogbm9uZTtcbiAgYm9yZGVyOiBub25lO1xuICBjb2xvcjogd2hpdGU7XG4gIGZvbnQtc2l6ZTogMjBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uY2xvc2UtY2hhdC1idG46aG92ZXIge1xuICBjb2xvcjogI2RkZDtcbn1cblxuLyogQ2hhdCBCb2R5ICovXG4uY2hhdC1ib2R5IHtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgcGFkZGluZzogMTBweDtcbiAgb3ZlcmZsb3cteTogYXV0bztcbiAgbWF4LWhlaWdodDogNDAwcHg7XG59XG5cbi5tZXNzYWdlcyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGdhcDogMTBweDtcbiAgb3ZlcmZsb3cteTogYXV0bztcbiAgbWF4LWhlaWdodDogMzAwcHg7XG59XG5cbi5tZXNzYWdlIHtcbiAgcGFkZGluZzogMTBweDtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBtYXgtd2lkdGg6IDc1JTtcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xufVxuXG4udXNlci1tZXNzYWdlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzI1ZDM2NjtcbiAgY29sb3I6IHdoaXRlO1xuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcbn1cblxuLmJvdC1tZXNzYWdlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2YwZjBmMDtcbiAgY29sb3I6ICMzMzM7XG4gIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XG59XG5cbi8qIFR5cGluZyBJbmRpY2F0b3IgKi9cbi5zZXJ2ZXItdHlwaW5nIHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBjb2xvcjogIzg4ODtcbn1cblxuLyogSW5wdXQgUm93ICh0ZXh0YXJlYSArIHNlbmQgYnV0dG9uKSAqL1xuLmlucHV0LXJvdyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGdhcDogMTBweDtcbiAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuLyogVGV4dGFyZWEgU3R5bGluZyAqL1xudGV4dGFyZWEge1xuICBmbGV4OiAxO1xuICBtaW4taGVpZ2h0OiA0MHB4O1xuICBtYXgtaGVpZ2h0OiAxMDBweDtcbiAgcmVzaXplOiBub25lO1xuICBwYWRkaW5nOiAxMHB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjZGRkO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIGZvbnQtc2l6ZTogMTRweDtcbiAgb3V0bGluZTogbm9uZTtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4xKTtcbn1cblxuLyogU2VuZCBCdXR0b24gKi9cbi5zZW5kLWJ1dHRvbiB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMxMjhjN2U7XG4gIGNvbG9yOiB3aGl0ZTtcbiAgYm9yZGVyOiBub25lO1xuICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIHBhZGRpbmc6IDEwcHggMTZweDtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIGN1cnNvcjogcG9pbnRlcjtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZC1jb2xvciAwLjNzIGVhc2U7XG59XG5cbi5zZW5kLWJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyNWQzNjY7XG59XG5cbi8qIE1lZGlhIHF1ZXJpZXMgKi9cbkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDQwMHB4KSB7XG4gIC5jaGF0LXBvcHVwIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBtYXgtaGVpZ2h0OiA5MCU7XG4gIH1cblxuICAubWVzc2FnZXMge1xuICAgIG1heC1oZWlnaHQ6IDMwMHB4O1xuICB9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["io","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵproperty","ɵɵpureFunction2","_c0","msg_r4","startsWith","ɵɵadvance","ɵɵtextInterpolate1","ɵɵelement","ɵɵlistener","ChatComponent_div_3_Template_button_click_5_listener","ɵɵrestoreView","_r6","ctx_r5","ɵɵnextContext","ɵɵresetView","closeChat","ɵɵtemplate","ChatComponent_div_3_div_9_Template","ChatComponent_div_3_div_10_Template","ChatComponent_div_3_Template_textarea_input_12_listener","_r3","ɵɵreference","ctx_r7","adjustHeight","ChatComponent_div_3_Template_textarea_keydown_12_listener","$event","ctx_r8","onKeydown","ChatComponent_div_3_Template_button_click_14_listener","ctx_r9","sendMessage","ctx_r0","messages","isTyping","ChatComponent","constructor","message","chatOpen","ngOnInit","socket","on","msg","push","value","trim","emit","openChat","event","key","input","style","height","scrollHeight","selectors","decls","vars","consts","template","ChatComponent_Template","rf","ctx","ChatComponent_Template_button_click_1_listener","ChatComponent_div_3_Template"],"sources":["/workspace/Chat_bot_Site/frontend/src/app/chat/chat.component.ts","/workspace/Chat_bot_Site/frontend/src/app/chat/chat.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { io } from 'socket.io-client';  // Importa io correttamente\n\n@Component({\n  selector: 'app-chat',\n  templateUrl: './chat.component.html',\n  styleUrls: ['./chat.component.css']\n})\nexport class ChatComponent implements OnInit {\n  socket: any;\n  message: string = '';\n  messages: string[] = [];\n  chatOpen: boolean = false;\n  isTyping: boolean = false;  // Variabili per gestire lo stato di \"scrittura\" del server\n\n  ngOnInit() {\n    // Connessione al server Flask con Socket.IO (usa HTTPS)\n    this.socket = io('https://5000-thammahetti-chatbotsite-aasn929c9qw.ws-eu118.gitpod.io/');  // Cambia l'URL se necessario\n\n    // Ascolta i messaggi ricevuti dal server (chatbot)\n    this.socket.on('message', (msg: string) => {\n      this.messages.push(`Piombobot: ${msg}`);\n      this.isTyping = false;  // Nascondi l'indicatore di scrittura\n    });\n  }\n\n  sendMessage(message: HTMLTextAreaElement) {\n    this.message = message.value;\n    if (this.message.trim()) {\n      // Aggiungi il messaggio dell'utente alla chat\n      this.messages.push(`Tu: ${this.message}`);\n      message.value = '';  // Pulisce la casella di testo\n\n      // Indica che il server sta scrivendo\n      this.isTyping = true;\n\n      // Invia il messaggio al server tramite Socket.IO\n      this.socket.emit('message', this.message);\n    }\n  }\n\n  // Metodo per aprire il popup della chat\n  openChat(): void {\n    this.chatOpen = true;\n  }\n\n  // Metodo per chiudere il popup della chat\n  closeChat(): void {\n    this.chatOpen = false;\n  }\n\n  // Metodo per gestire la pressione di un tasto (Enter)\n  onKeydown(event: KeyboardEvent, message: HTMLTextAreaElement): void {\n    if (event.key === 'Enter') {\n      this.sendMessage(message);\n    }\n  }\n\n  // Metodo per gestire l'altezza dinamica del campo di input\n  adjustHeight(input: HTMLTextAreaElement) {\n    input.style.height = 'auto';  // Reset height to auto first\n    input.style.height = `${input.scrollHeight}px`;  // Set height based on content scrollHeight\n  }\n}\n","<div class=\"page-container\">\n  <!-- Chatbot Button with Avatar -->\n  <button class=\"open-chat-btn\" (click)=\"openChat()\">\n    <img src=\"../../assets/Aldo_moro.png\" alt=\"Aldo Moro\" class=\"chat-btn-avatar\" />\n  </button>\n\n  <!-- Chatbot Popup -->\n  <div *ngIf=\"chatOpen\" class=\"chat-popup\">\n    <div class=\"chat-header\">\n      <img src=\"../../assets/Aldo_moro.png\" alt=\"Aldo Moro\" class=\"chat-avatar\" />\n      <span class=\"chat-name\">Aldo Moro</span>\n      <button class=\"close-chat-btn\" (click)=\"closeChat()\">X</button>\n    </div>\n    <div class=\"chat-body\">\n      <div class=\"messages\">\n        <div *ngFor=\"let msg of messages\" class=\"message\" [ngClass]=\"{'user-message': msg.startsWith('Tu:'), 'bot-message': !msg.startsWith('Tu:')}\">\n          {{ msg }}\n        </div>\n        <!-- Typing indicator -->\n        <div *ngIf=\"isTyping\" class=\"server-typing\">Aldo Moro is typing...</div>\n      </div>\n      <!-- Input Row: Textarea + Button -->\n      <div class=\"input-row\">\n        <textarea placeholder=\"Type a message...\" #message (input)=\"adjustHeight(message)\" (keydown)=\"onKeydown($event, message)\"></textarea>\n        <button class=\"send-button\" (click)=\"sendMessage(message)\">Send</button>\n      </div>\n    </div>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}